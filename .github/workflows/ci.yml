name: build

snippets:
  step-set-project-vars: &step-set-project-vars
    name: Set project variables
    id: projectVars
    run: |
      tmp = ${{ github.job }}
      docker_image=daotl/web-monorepo-starter-${tmp#"docker-"}
      echo docker_image=$docker_image >> $GITHUB_OUTPUT
      echo commit_id_image=$docker_image:commit-${GITHUB_SHA::8}

  step-docker-setup-buildx: &step-docker-setup-buildx
    uses: docker/setup-buildx-action@v3
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.node-version == '20.x'

  step-docker-login: &step-docker-login
    uses: docker/login-action@v3
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.node-version == '20.x'
    with:
      username: ${{ secrets.DOCKERHUB_USERNAME }}
      password: ${{ secrets.DOCKERHUB_TOKEN  }}

  step-docker-build-push: &step-docker-build-push
    uses: docker/build-push-action@v5
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.node-version == '20.x'
    with:
      context: apps/${{ github.job }}
      file: apps/${{github.job}}/docker/Dockerfile.ci
      push: true
      tags: ${{ steps.commonVars.outputs.docker_image }}:commit-${{ steps.commonVars.outputs.commit_id_8 }},${{ steps.commonVars.outputs.docker_image }}:${{ github.ref_name }},${{ steps.commonVars.outputs.docker_image }}:latest
      # cache-from: type=registry,ref=${{ steps.commonVars.outputs.docker_image }}:buildcache-${{ github.ref_name }}
      # cache-to: type=registry,ref=${{ steps.commonVars.outputs.docker_image }}:buildcache-${{ github.ref_name }},mode=max

  job-docker: &job-docker
    needs: [build]
    runs-on: ubuntu-latest
    env:
      RUNNER_TOOL_CACHE: /toolcache
    steps:
      - *step-set-project-vars
      - *step-docker-setup-buildx
      - *step-docker-login
      - *step-docker-build-push

on:
  push:
    branches: [main, single-page, feat/*, fix/*, chore/*, debug/*]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    # Workaround for tools (e.g., Node.js) not cached:
    # https://gitea.com/gitea/act_runner/issues/70#issuecomment-734824
    env:
      RUNNER_TOOL_CACHE: /toolcache

    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [18.x, 20.x]

    steps:
      - name: Set common variables
        id: commonVars
        run: |
          commit_id_8=${GITHUB_SHA::8}
          echo repo_link=https://github.com/${{ github.repository }} >> $GITHUB_OUTPUT
          echo commit_id_8=$commit_id_8 >> $GITHUB_OUTPUT

      # Needs to come first, `actions/setup-node` uses `pnpm-lock.yaml`
      - uses: actions/checkout@v3
        with:
          token: '${{ secrets.REPOSITORY_TOKEN }}'
          ssh-strict: false
          # TO IMPROVE: We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v4
      # - run: |
      #     echo "BASE: ${{ env.NX_BASE }}" or ${{ steps.setSHAs.outputs.base }}"
      #     echo "HEAD: ${{ env.NX_HEAD }}" or ${{ steps.setSHAs.outputs.head }}"

      - name: Calculate affected projects
        uses: e-square-io/nx-affected-matrix@v2
        id: affected
        with:
          targets: build

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: install zx
        run: pnpm add -g zx

      - name: pnpm install
        # Fix: `pnpm install --filter` installing dependencies of all projects
        # https://github.com/pnpm/pnpm/issues/6300#issuecomment-1722120409
        run: CYPRESS_INSTALL_BINARY=0 ./scripts/pnpm-install-filtered.js --frozen-lockfile ${{ steps.setSHAs.outputs.apps }} ${{ steps.setSHAs.outputs.libs }}

      - name: build & lint ("main" branch)
        if: github.ref == 'refs/heads/main'
        run: pnpm nx affected -t build lint

      - name: build & lint (not "main" branch)
        if: github.ref != 'refs/heads/main'
        run: |
          # `git fetch`: to workaround https://github.com/actions/checkout/issues/296#issuecomment-1348164731
          # Not needed now for `fetch-depth: 0`
          # git fetch origin main:refs/remotes/origin/main
          # git reset --soft refs/remotes/origin/main
          pnpm add -g concurrently
          concurrently "pnpm nx affected -t build" "npx lefthook run pre-commit"

  docker-web: *job-docker

  docker-desktop: *job-docker
